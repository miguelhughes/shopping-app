{"version":3,"sources":["CartTotal.js","Nav.js","static-data.js","Item.js","ItemPage.js","CartPage.js","App.js","index.js"],"names":["CartTotal","cart","reduce","sum","i","price","count","NavItem","tabName","name","activeTab","onTabChange","className","onClick","Summary","icon","faShoppingCart","item","Nav","items","id","description","Item","children","ItemPage","onAddToCart","map","key","CartPage","onAddOne","onRemoveOne","length","Content","tab","onRemoveFromCart","App","useState","setActiveTab","setCart","summarizedCart","groupedItems","summary","Object","values","summarizeCart","prevCart","index","findIndex","newCart","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de01476f.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nexport function CartTotal({ cart }) {\n  return <span>${cart.reduce((sum, i) => sum + i.price * i.count, 0)}</span>;\n}\n\nCartTotal.propTypes = {\n  cart: PropTypes.arrayOf(\n    PropTypes.shape({\n      price: PropTypes.number.isRequired,\n      count: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\nimport { CartTotal } from \"./CartTotal\";\nconst Nav = ({ activeTab, onTabChange, cart }) => {\n  return (\n    <nav className=\"App-nav\">\n      <ul>\n        <NavItem\n          name=\"items\"\n          onTabChange={onTabChange}\n          activeTab={activeTab}\n        ></NavItem>\n        <NavItem\n          name=\"cart\"\n          onTabChange={onTabChange}\n          activeTab={activeTab}\n        ></NavItem>\n        <Summary onTabChange={onTabChange} cart={cart}></Summary>\n      </ul>\n    </nav>\n  );\n};\n\nconst NavItem = ({ name, activeTab, onTabChange }) => {\n  const itemClass = (tabName) =>\n    `App-nav-item ${activeTab === tabName ? \"selected\" : \"\"}`;\n  return (\n    <li className={itemClass(name)}>\n      <button onClick={() => onTabChange(name)}>{name}</button>\n    </li>\n  );\n};\nconst countItems = (items) => items.reduce((sum, item) => sum + item.count, 0);\n\nconst Summary = ({ onTabChange, cart }) => (\n  <li className=\"App-nav-item summary\">\n    <button onClick={() => onTabChange(\"cart\")}>\n      <FontAwesomeIcon icon={faShoppingCart} />\n      {countItems(cart)} items (<CartTotal cart={cart} />)\n    </button>\n  </li>\n);\nexport default Nav;\n","let items = [\n  {\n    id: 0,\n    name: \"Apple iPad\",\n    description: \"An iPad like no other. WiFi, 4G, lots of storage.\",\n    price: 329.0,\n  },\n  {\n    id: 1,\n    name: \"Apple iPad Pro\",\n    description: \"Even more expensive than the regular iPad.\",\n    price: 799.0,\n  },\n  {\n    id: 2,\n    name: \"Canon T7i\",\n    description: \"DSLR camera with lots of megapixels.\",\n    price: 749.99,\n  },\n  {\n    id: 3,\n    name: \"Apple Watch Sport\",\n    description: \"A watch\",\n    price: 249.99,\n  },\n  {\n    id: 4,\n    name: \"Apple Watch Silver\",\n    description: \"A more expensive watch\",\n    price: 599.99,\n  },\n];\n\nexport { items };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Item.css\";\n\nfunction Item({ item, children }) {\n  return (\n    <div className=\"Item\">\n      <div className=\"Item-left\">\n        <div className=\"Item-image\"></div>\n        <div className=\"Item-title\">{item.name}</div>\n        <div className=\"Item-description\">{item.description}</div>\n      </div>\n      <div className=\"Item-right\">\n        <div className=\"Item-price\">${item.price}</div>\n        {children}\n      </div>\n    </div>\n  );\n}\nItem.propTypes = {\n  item: PropTypes.object.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Item;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ItemPage.css\";\nimport Item from \"./Item\";\n\nfunction ItemPage({ items, onAddToCart }) {\n  return (\n    <ul className=\"ItemPage-items\">\n      {items.map((item) => (\n        <li key={item.id} className=\"ItemPage-item\">\n          <Item item={item}>\n            <button\n              className=\"Item-addToCart\"\n              onClick={() => onAddToCart(item)}\n            >\n              Add to Cart\n            </button>\n          </Item>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nItemPage.propTypes = {\n  items: PropTypes.array.isRequired,\n  onAddToCart: PropTypes.func.isRequired,\n};\n\nexport default ItemPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Item from \"./Item\";\nimport \"./CartPage.css\";\nimport { CartTotal } from \"./CartTotal\";\n\nfunction CartPage({ items, onAddOne, onRemoveOne }) {\n  return (\n    <>\n      <ul className=\"CartPage-items\">\n        {items.map((item) => (\n          <li key={item.id} className=\"CartPage-item\">\n            <Item item={item}>\n              <div className=\"CartItem-controls\">\n                <button\n                  className=\"CartItem-removeOne\"\n                  onClick={() => onRemoveOne(item)}\n                >\n                  &ndash;\n                </button>\n                <span className=\"CartItem-count\">{item.count}</span>\n                <button\n                  className=\"CartItem-addOne\"\n                  onClick={() => onAddOne(item)}\n                >\n                  +\n                </button>\n              </div>\n            </Item>\n          </li>\n        ))}\n      </ul>\n      {items.length > 0 && (\n        <div className=\"CartPage-total\">\n          Total: <CartTotal cart={items} />\n        </div>\n      )}\n      {items.length === 0 && (\n        <div className=\"CartPage-empty\">\n          <p>Your cart is empty.</p>\n          <p>Why not add some expensive products to it?</p>\n        </div>\n      )}\n    </>\n  );\n}\n\nCartPage.propTypes = {\n  items: PropTypes.array.isRequired,\n  onAddOne: PropTypes.func.isRequired,\n  onRemoveOne: PropTypes.func.isRequired,\n};\n\nexport default CartPage;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Nav from \"./Nav\";\nimport \"./App.css\";\nimport { items } from \"./static-data\";\nimport ItemPage from \"./ItemPage\";\nimport CartPage from \"./CartPage\";\n\nfunction Content({ tab, onAddToCart, onRemoveFromCart, cart }) {\n  switch (tab) {\n    default:\n    case \"items\":\n      return <ItemPage items={items} onAddToCart={onAddToCart} />;\n    case \"cart\":\n      return (\n        <CartPage\n          items={cart}\n          onAddOne={onAddToCart}\n          onRemoveOne={onRemoveFromCart}\n        />\n      );\n  }\n}\n\nContent.propTypes = {\n  tab: PropTypes.string.isRequired,\n  onAddToCart: PropTypes.func.isRequired,\n  onRemoveFromCart: PropTypes.func.isRequired,\n};\n\nconst summarizeCart = (cart) => {\n  const groupedItems = cart.reduce((summary, item) => {\n    summary[item.id] = summary[item.id] || {\n      ...item,\n      count: 0,\n    };\n    summary[item.id].count++;\n    return summary;\n  }, {});\n\n  return Object.values(groupedItems);\n};\nconst App = () => {\n  const [activeTab, setActiveTab] = useState(\"items\");\n  const [cart, setCart] = useState([]);\n  const addToCart = (item) => {\n    setCart((prevCart) => [...prevCart, item]);\n  };\n  const removeFromCart = (item) => {\n    setCart((prevCart) => {\n      var index = cart.findIndex((i) => i.id === item.id);\n      if (index >= 0) {\n        let newCart = [...prevCart];\n        newCart.splice(index, 1);\n        return newCart;\n      } else return prevCart;\n    });\n  };\n\n  const summarizedCart = summarizeCart(cart);\n  return (\n    <div className=\"App\">\n      <Nav\n        activeTab={activeTab}\n        onTabChange={setActiveTab}\n        cart={summarizedCart}\n      />\n      <main className=\"App-content\">\n        <Content\n          tab={activeTab}\n          onAddToCart={addToCart}\n          onRemoveFromCart={removeFromCart}\n          cart={summarizedCart}\n        />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}